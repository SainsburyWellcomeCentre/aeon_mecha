[build-system]
requires = ["setuptools>=62.0", "wheel>=0.37"]
build-backend = "setuptools.build_meta"

[project]
name = "aeon_mecha"
version = "0.1.0"
requires-python = ">=3.11"
description = '''
    Code for managing acquired data from Project Aeon experiments. Includes general file IO,
    data QC, querying, and analysis modules.
'''
authors = [
  { name = "Jai Bhagat", email = "jkbhagatio@gmail.com" },
  { name = "Goncalo Lopes", email = "g.lopes@neurogears.org" },
  { name = "Thinh Nguyen", email = "thinh@datajoint.com" },
  { name = "Joseph Burling", email = "joseph@datajoint.com" },
  { name = "Chang Huan Lo", email = "changhuan.lo@ucl.ac.uk" },
  { name = "Jaerong Ahn", email = "jaerong.ahn@datajoint.com" },
]
license = { file = "license.md" }
readme = "readme.md"
dependencies = [
  "bottleneck>=1.2.1,<2",
  "datajoint-utilities @ git+https://github.com/datajoint-company/datajoint-utilities",
  "datajoint>=0.13.6",
  "dotmap",
  "fastparquet",
  "graphviz",
  "importlib_metadata",
  "ipykernel",
  "jupyter",
  "jupyterlab",
  "matplotlib",
  "numba>=0.46.0, <1",
  "numexpr>=2.6.8, <3",
  "numpy>=1.21.0, <2",
  "opencv-python",
  "pandas>=1.3",
  "plotly",
  "pyarrow",
  "pydotplus",
  "pymysql",
  "pyyaml",
  "scikit-learn",
  "scipy",
  "seaborn",
  "xarray>=0.12.3",
]

[project.optional-dependencies]
dev = [
  "bandit",
  "black[jupyter]",
  "gh",
  "ipdb",
  "pre-commit",
  "pyan3 @ git+https://github.com/Technologicat/pyan.git",
  "pydantic",
  "pyright",
  "pytest",
  "pytest-cov",
  "sphinx",
  "ruff",
  "tox",
]
gpu = [
  "cupy",
  "dask"
]

[project.scripts]
aeon_ingest = "aeon.dj_pipeline.ingest.process:cli"

[project.urls]
Homepage = "https://sainsburywellcomecentre.github.io/aeon_docs/"
Repository = "https://github.com/sainsburyWellcomeCentre/aeon_mecha"
Documentation = "https://sainsburywellcomecentre.github.io/aeon_docs/"
DataJoint = "https://docs.datajoint.org/"

[tool.setuptools]
packages = ["aeon"]

[tool.black]
line-length = 108
color = false
exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | env
    | venv
)/
'''

[tool.ruff]
select = ["E", "W", "F", "I", "D", "UP", "S", "B", "A", "C4", "ICN", "PIE", "PT", "SIM", "PL"]
line-length = 108
ignore = [
    "E201", "E202", "E203", "E231", "E731", "E702", 
    "S101", 
    "PT013",
    "PLR0912", "PLR0913", "PLR0915"
]
extend-exclude = [".git", ".github", ".idea", ".vscode"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pyright]
reportImportCycles = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedfunction = "error"
reportUnusedVariable = "error"
reportDuplicateImport = "error"
reportWildcardImportFromLibrary = "error"
reportPrivateUsage = "error"
reportCallInDefaultInitializer = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecesaryCast = "error"
reportUnnecesarryComparison = "error"
reportUnnecessaryContains = "error"
reportAssertAlwaysTrue = "error"
reportSelfClsParameterName = "error"
reportUnusedExpression = "error"
reportMatchNotExhaustive = "error"
reportImplicitOverride = "error"
reportShadowedImports = "error"
# *Note*: we may want to set all 'ReportOptional*' rules to "none", but leaving 'em default for now
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
markers = [
    "api",
]
